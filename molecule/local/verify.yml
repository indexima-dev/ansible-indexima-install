---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  vars:
    hive_port: 10000
  tasks:
    - name: Wait for Hive server
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ hive_port }}"
        timeout: 300
      when: is_master == 1

    - name: Wait for Monitor server
      wait_for:
        host: "{{ ansible_host }}"
        port: 9999
        timeout: 300
      when: is_master == 1

    - name: Wait for Dev console
      wait_for:
        host: "{{ ansible_host }}"
        port: 8082
        timeout: 300
      when: is_master == 1

    - name: Check if all nodes are up
      uri:
        url: "http://{{ ansible_host }}:9999/api/get/nodes"
        follow_redirects: none
        method: GET
      register: _result
      until:
        - _result.status == 200
        - _result.json.nodesDown |length == 0
        - _result.json.nodesUp | length == nodes
      retries: 5 # 12 * 5 seconds = 1min
      delay: 5 # Every 5 seconds

    - name: Cat galactica.conf
      shell: cat /opt/indexima/galactica/conf/galactica.conf
      register: _galactica_conf

    - name: Check that log.dir is /var/log/indexima/logs
      assert:
        that:
          - "'log.dir = /var/log/indexima/logs' in _galactica_conf.stdout"

    - name: Check that hive.log.dir is /tmp/hive
      assert:
        that:
          - "'hive.log.dir = /var/log/indexima/hive' in _galactica_conf.stdout"

    - name: Check that history.dir is /opt/indexima/oldhistory
      assert:
        that:
          - "'history.dir = /var/log/indexima/history' in _galactica_conf.stdout"

    - name: Check that history.export is /var/log/indexima/history_csv
      assert:
        that:
          - "'history.export = /var/log/indexima/history_csv' in _galactica_conf.stdout"

    - name: List all files in galactica/driver
      find:
        paths: "/opt/indexima/galactica/driver"
        patterns: "*.jar"
      register: _jdbc_drivers

    - name: Check that there are 4 drivers
      assert:
        that: "_jdbc_drivers.matched == 4"


