---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  vars:
    hive_port: 10000
  tasks:
    # Setting version
    - name: Split version
      set_fact:
        version_split: "{{ version.split('.') }}"
      when: version is defined
    - name: Set version format new
      set_fact:
        version_format_new: true
      when: version_split[0] |length == 4
    - name: Set version format old
      set_fact:
        version_format_new: false
      when: version_split[0] |length != 4
    - name: Set indexima_year
      set_fact:
        indexima_year: "{{ version_split[0] }}"
        indexima_release: "{{ version_split[0:2] |join('.') }}"
      when:
        - indexima_year is not defined
        - version_format_new|bool
    - name: Set indexima_month
      set_fact:
        indexima_month: "{{ version_split[1] }}"
      when:
        - indexima_month is not defined
        - version_format_new|bool

    # Start verifying
    - name: Wait for Hive server
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ hive_port }}"
        timeout: 300
      when: is_master == 1

    - name: Wait for Monitor server
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ monitor_port }}"
        timeout: 300
      when: is_master == 1

    - name: Wait for Dev console
      wait_for:
        host: "{{ ansible_host }}"
        port: 8082
        timeout: 300
      when: is_master == 1

    - name: Check if all nodes are up
      uri:
        url: "http://{{ ansible_host }}:{{ monitor_port }}/api/status"
        follow_redirects: none
        method: GET
      register: _result
      until:
        - _result.status == 200
      retries: 5 
      delay: 10

    - name: Cat galactica.conf
      shell: cat /opt/indexima/galactica/conf/galactica.conf
      register: _galactica_conf

    - name: Check that partitions = 8
      assert:
        that:
          - "'partitions = 8' in _galactica_conf.stdout"

    - name: Check that cores = 8
      assert:
        that:
          - "'cores = 8' in _galactica_conf.stdout"

    - name: Check that queries = 64
      assert:
        that:
          - "'queries = 64' in _galactica_conf.stdout"

    - name: Check that log.dir is /var/log/indexima/logs
      assert:
        that:
          - "'log.dir = /var/log/indexima/logs' in _galactica_conf.stdout"

    - name: Check that node port is correctly modified
      assert:
        that:
          - "'node.port = 29999' in _galactica_conf.stdout"

    - name: Check that webui.port is correctly modified
      assert:
        that:
          - "'webui.port = 12345' in _galactica_conf.stdout"

    - name: Check that hive.log.dir is /tmp/hive
      assert:
        that:
          - "'hive.log.dir = /var/log/indexima/hive' in _galactica_conf.stdout"

    - name: Check that history.dir is /opt/indexima/oldhistory
      assert:
        that:
          - "'history.dir = /var/log/indexima/history' in _galactica_conf.stdout"

    - name: Check that history.export is /var/log/indexima/history_csv
      assert:
        that:
          - "'history.export = /var/log/indexima/history_csv' in _galactica_conf.stdout"

    - name: List all files in galactica/driver
      find:
        paths: "/opt/indexima/galactica/driver"
        patterns: "*.jar"
      register: _jdbc_drivers

    - name: Check that there are more than 2 drivers
      assert:
        that: "_jdbc_drivers.matched > 2"

    - name: Cat galactica-env.sh
      shell: cat /opt/indexima/galactica/conf/galactica-env.sh
      register: _galactica_env

    - name: Check that JMX_OPTIONS is absent
      assert:
        that:
          - >
            "export JMX_OPTIONS=" not in _galactica_env.stdout

    - name: Cat visualdoop2/config.sh
      shell: cat /opt/indexima/visualdoop2/config.sh
      register: _vd2_config

    - name: Check that vd_config.sh has the correct admin_user
      assert:
        that:
          - "'VISUALDOOP_ADMIN=admin_local' in _vd2_config.stdout"
        fail_msg: "VISUALDOOP_ADMIN not defined"

    - name: Register galactica-env.sh path
      stat:
        path: "/opt/indexima/galactica/conf/galactica-env.sh"
      register: _file_driver

    - name: Check that group is correct
      assert:
        that:
          - _file_driver.stat.gr_name == 'root'

    - name: Check that user is correct
      assert:
        that:
          - _file_driver.stat.pw_name == 'root'