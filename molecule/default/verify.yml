---
# Verify that Hive, Monitor and Dev Console are reachable. Check that the number of up node is the requested one

- name: Verify
  hosts: all
  vars:
    hive_port: 10000
  tasks:
    # Setting version
    - name: Split version
      set_fact:
        version_split: "{{ version.split('.') }}"
      when: version is defined
    - name: Set version format new
      set_fact:
        version_format_new: true
      when: version_split[0] |length == 4
    - name: Set version format old
      set_fact:
        version_format_new: false
      when: version_split[0] |length != 4
    - name: Set indexima_year
      set_fact:
        indexima_year: "{{ version_split[0] }}"
        indexima_release: "{{ version_split[0:2] |join('.') }}"
      when:
        - indexima_year is not defined
        - version_format_new|bool
    - name: Set indexima_month
      set_fact:
        indexima_month: "{{ version_split[1] }}"
      when:
        - indexima_month is not defined
        - version_format_new|bool

    # Start verifying
    - name: Wait for Hive server
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ hive_port }}"
        timeout: 300
      when: is_master == 1

    - name: Wait for Monitor server
      wait_for:
        host: "{{ ansible_host }}"
        port: 9999
        timeout: 300
      when: is_master == 1

    - name: Wait for Dev console
      wait_for:
        host: "{{ ansible_host }}"
        port: 8082
        timeout: 300
      when: is_master == 1

    - name: Check if all nodes are up
      uri:
        url: "http://{{ ansible_host }}:9999/api/status"
        follow_redirects: none
        method: GET
      register: _result
      until:
        - _result.status == 200
      retries: 12 
      delay: 10

    # galactica.conf
    - name: Cat galactica.conf
      shell: cat /opt/indexima/galactica/conf/galactica.conf
      register: _galactica_conf
    
    - name: Check that node port is default
      assert:
        that:
          - "'node.port = 19999' in _galactica_conf.stdout"

    - name: Check that webui.port is default
      assert:
        that:
          - "'webui.port = 9999' in _galactica_conf.stdout"

    - name: Check that partitions = 8
      assert:
        that:
          - "'partitions = 8' in _galactica_conf.stdout"

    - name: Check that cores = 2
      assert:
        that:
          - "'cores = 2' in _galactica_conf.stdout"

    - name: Check that queries = 8
      assert:
        that:
          - "'queries = 8' in _galactica_conf.stdout"

    - name: Check that log.dir is /var/log/indexima/logs
      assert:
        that:
          - "'log.dir = /var/log/indexima/logs' in _galactica_conf.stdout"

    - name: Check that hive.log.dir is /tmp/indexima/hive
      assert:
        that:
          - "'hive.log.dir = /tmp/indexima/hive' in _galactica_conf.stdout"

    - name: Check that history.dir is /opt/indexima/oldhistory
      assert:
        that:
          - "'history.dir = /opt/indexima/oldhistory' in _galactica_conf.stdout"

    - name: Check that history.export
      assert:
        that:
          - "'history.export = /opt/indexima/newhistory' in _galactica_conf.stdout"

    - name: Check that cluster.name = docker_test
      assert:
        that:
          - "'cluster.name = docker_test' in _galactica_conf.stdout"

    - name: Check that monitor.api.key is ChangeMe
      assert:
        that:
          - "'monitor.api.key = ChangeMe' in _galactica_conf.stdout"
        fail_msg: "monitor.api.key is not ChangeMe"

    - name: Check that galactica extended content is present
      assert:
        that:
          - "'myvar = 1' in _galactica_conf.stdout"
        fail_msg: "galactica extended content is not present"

    # galactica-env.sh
    - name: Cat galactica-env.sh
      shell: cat /opt/indexima/galactica/conf/galactica-env.sh
      register: _galactica_env

    - name: Check that galactica mem = 600m
      assert:
        that:
          - ram == 600
          - "'GALACTICA_MEM=420m' in _galactica_env.stdout"

    - name: Check that GC_OPTIONS are customized
      assert:
        that:
          - '"-XX:NewRatio=3" in _galactica_env.stdout'

    - name: Check that JMX_OPTIONS are present and customized
      assert:
        that:
          - >
            "export JMX_OPTIONS='-verbose:gc'" in _galactica_env.stdout

    - name: Stat mydriver.jar
      stat:
        path: /etc/ansible/roles/ansible-indexima-install/files/drivers/mydriver.jar
      register: _mydriver

    - name: Check that mydriver.jar exists
      assert:
        that:
          - _mydriver.stat.exists |bool

    - name: Check that jstack is installed
      command: "jstack -h"

    - name: Check that jmap is installed
      command: "jmap -h"

    - name: Cat visualdoop2/config.sh
      shell: cat /opt/indexima/visualdoop2/config.sh
      register: _vd2_config

    - name: Check that vd_config.sh has the correct admin_user
      assert:
        that:
          - "'VISUALDOOP_ADMIN=test_admin' in _vd2_config.stdout"
        fail_msg: "VISUALDOOP_ADMIN not defined"

    - name: Register galactica-env.sh path
      stat:
        path: "/opt/indexima/galactica/conf/galactica-env.sh"
      register: _file_driver

    - name: Check that group is correct
      assert:
        that:
          - _file_driver.stat.gr_name == "index_group"

    - name: Check that user is correct
      assert:
        that:
          - _file_driver.stat.pw_name == "root"

    - name: Check that MONITOR_API_KEY is ChangeMe
      assert:
        that:
          - "'MONITOR_API_KEY=ChangeMe' in _vd2_config.stdout"
        fail_msg: "MONITOR_API_KEY is not ChangeMe"
