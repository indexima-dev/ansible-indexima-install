---
- name: config_galactica.yaml / Copy custom galactica.conf from local file
  shell: "cat {{ galactica_conf }}"
  register: _custom_galactica_conf_local
  when:
    - galactica_conf is defined
    - galactica_conf != ''
    - '"s3://" not in galactica_conf'
  changed_when: false

- name: config_galactica.yaml / Copy galactica.conf extended content from local file
  local_action:
    module: shell
    _raw_params: "cat {{ galactica_conf_extended }}"
  register: _galactica_conf_extended_local
  when:
    - galactica_conf_extended is defined
    - galactica_conf_extended != ''
    - '"s3://" not in galactica_conf_extended'
  changed_when: false

- name: config_galactica.yaml / Set bucket and path to galactica_conf_extended when s3
  set_fact:
    galactica_conf_extended_bucket: "{{ galactica_conf_extended.split('/')[2] }}"
    galactica_conf_extended_path: "{{ galactica_conf_extended.split('/')[3:] |join('/') }}"
  when:
    - galactica_conf_extended is defined
    - '"s3://" in galactica_conf_extended'

- name: config_galactica.yaml / Get galactica extended content from s3 file
  aws_s3:
    bucket: "{{ galactica_conf_extended_bucket }}"
    object: "{{ galactica_conf_extended_path }}"
    mode: getstr
  register: _galactica_conf_extended_s3
  when:
    - galactica_conf_extended is defined
    - '"s3://" in galactica_conf_extended'
  changed_when: false

- name: config_galactica.yaml / Set bucket and path to galactica_conf when s3
  set_fact:
    galactica_conf_bucket: "{{ galactica_conf.split('/')[2] }}"
    galactica_conf_path: "{{ galactica_conf.split('/')[3:] |join('/') }}"
  when:
    - galactica_conf is defined
    - '"s3://" in galactica_conf'

- name: config_galactica.yaml / Copy custom galactica.conf from s3 file
  aws_s3:
    bucket: "{{ galactica_conf_bucket }}"
    object: "{{ galactica_conf_path }}"
    mode: getstr
  register: _custom_galactica_conf_s3
  when:
    - galactica_conf is defined
    - '"s3://" in galactica_conf'
  changed_when: false

- name: config_galactica.yaml / Copy galactica.conf template to servers
  template:
    src: galactica.conf
    dest: "{{ indexima_path }}/galactica/conf/galactica.conf"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0644'

- name: config_galactica.yaml / Copy galactica-env.sh template to servers
  template:
    src: galactica-env.sh
    dest: "{{ indexima_path }}/galactica/conf/galactica-env.sh"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0755'

- name: config_galactica.yaml / Copy hive-site.xml template to servers
  template:
    src: hive-site.xml
    dest: "{{ indexima_path }}/galactica/conf/hive-site.xml"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0644'

- name: config_galactica.yaml / Rename log4j2.xml.template
  copy:
    src: "{{ galactica_path }}/conf/log4j2.xml.template"
    dest: "{{ galactica_path }}/conf/log4j2.xml"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    remote_src: yes
    mode: '0644'

- name: config_galactica.yaml / Rename optimize_index.json.template
  copy:
    src: "{{ galactica_path }}/conf/optimize_index.json.template"
    dest: "{{ galactica_path }}/conf/optimize_index.json"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    remote_src: yes
    mode: '0644'

- name: config_galactica.yaml / Rename notifications.json.template
  copy:
    src: "{{ galactica_path }}/conf/notifications.json.template"
    dest: "{{ galactica_path }}/conf/notifications.json"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    remote_src: yes
    mode: '0644'

- name: config_galactica.yaml / Rename supported_dbs.json.template
  copy:
    src: "{{ galactica_path }}/conf/supported_dbs.json.template"
    dest: "{{ galactica_path }}/conf/supported_dbs.json"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    remote_src: yes
    mode: '0644'

- name: config_galactica.yaml /  jaas.conf template to servers
  template:
    src: jaas.conf
    dest: "{{ galactica_path }}/jaas.conf"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0644'
  when: kerberos_principal is defined and kerberos_keytab is defined

- name: config_galactica.yaml / Copy google_credentials.json file to servers
  copy:
    src: "credentials.json"
    dest: "{{ google_credentials }}"
    owner: "{{ service_user }}"
    group: "{{ service_group }}"
    mode: '0644'
  when: google_credentials is defined