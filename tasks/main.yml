---
# tasks file for ansible-indexima-install
- import_tasks: set_facts.yaml
  tags: [ 'always' ]

- import_tasks: uninstall.yaml
  tags: [ 'never', 'uninstall' ]

### Install
## Install Prep
- import_tasks: install_prep.yaml
  tags: ['install', 'prerequisites', 'install-galactica', 'install-visualdoop' ]

- import_tasks: prerequisites.yaml
  tags: [ 'install', 'prerequisites', 'centos', 'debian' ]
  become: yes
  become_user: root

## Galactica

- import_tasks: install_galactica.yaml
  tags: [ 'install', 'update', 'install-galactica', 'update-galactica']

## Visualdoop2

- import_tasks: install_visualdoop.yaml
  tags: ['install', 'update', 'install-visualdoop', 'update-visualdoop']
  when:
    - is_master == 1
    - visualdoop |bool

## Dev Console
- import_tasks: install_devconsole.yaml
  tags: ['install', 'update', 'install-visualdoop', 'update-visualdoop']
  when:
    - is_master == 1
    - devconsole |bool

- import_tasks: deploy_service.yaml
  tags: [ 'service', 'install', 'update' ]
  when: systemd| bool

- import_tasks: config_galactica.yaml
  tags: [ 'conf', 'conf-galactica' ]

- import_tasks: config_custom.yaml
  tags: [ 'never', 'conf-custom' ]

- import_tasks: config_visualdoop.yaml
  tags: [ 'conf', 'conf-visualdoop' ]
  when: 
    - is_master == 1
    - visualdoop | bool

- import_tasks: config_devconsole.yaml
  tags: [ 'conf', 'conf-visualdoop' ]
  when:
    - is_master == 1
    - devconsole | bool

- import_tasks: drivers.yaml
  tags: [ 'driver', 'update', 'update-galactica', 'install', 'install-galactica' ]

- import_tasks: hadoop.yaml
  become: yes
  become_user: root
  tags: [ 'never', 'azure_datalake' ]

- import_tasks: license.yaml
  tags: [ 'never', 'license' ]

- import_tasks: stop_indexima.yaml
  tags: [ 'never', 'restart', 'stop' ]
  when: not systemd| bool

- import_tasks: start_indexima.yaml
  tags: [ 'restart', 'start' ]
  when: not systemd| bool

- import_tasks: manage_service.yaml
  tags: [ 'irestart' ]
  when: systemd| bool

- import_tasks: jdbc_url.yaml
  tags: [ 'always', 'jdbc']

- import_tasks: wait_for_service.yml
  tags: [ 'wait' ]