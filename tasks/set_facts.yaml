---
- name: Set is_master to 1 if single node
  set_fact:
    is_master: 1
  when: ansible_play_hosts | length == 1 or inventory_hostname == 'localhost'

- name: Set is_master to 0 if is_master is not defined
  set_fact:
    is_master: 0
  when: is_master is not defined

- name: Set internal_host if localhost
  set_fact:
    internal_host: localhost
  when: inventory_hostname == 'localhost'

- name: Set internal_host on all nodes
  set_fact:
    internal_host: "{{ internal_host }}"

- name: Display internal host value
  debug:
    msg: "{{ internal_host }}"

- name: Set warehouse on S3 if needed
  set_fact:
    warehouse: "s3a://{{ indexima_bucket_name }}/{{ indexima_bucket_prefix }}"
  when:
    - indexima_bucket_name is defined
    - indexima_bucket_prefix is defined

- name: Set visualdoop-data on S3 if needed
  set_fact:
    vd_bucket: "{{ indexima_bucket_name }}"
    vd_data: "{{ indexima_bucket_prefix }}"
  when:
  - indexima_bucket_name is defined
  - indexima_bucket_prefix is defined

- name: Set history logs on S3 if needed
  set_fact:
    indexima_history_dir: "s3a://{{ indexima_bucket_name }}/{{ indexima_bucket_prefix }}/history"
    indexima_history_export: "s3a://{{ indexima_bucket_name }}/{{ indexima_bucket_prefix }}/history_csv"
  when:
    - indexima_bucket_name is defined
    - indexima_bucket_prefix is defined

- name: Split version
  set_fact:
    version_split: "{{ version.split('.') }}"
  when: version is defined

- name: Print version_split
  debug:
    msg: "{{ version_split }}"
  when: version_split is defined

- name: Set version format new
  set_fact:
    version_format_new: true
  when: version_split[0] |length == 4

- name: Set version format old
  set_fact:
    version_format_new: false
  when: version_split[0] |length != 4

- name: Set indexima_year
  set_fact:
    indexima_year: "{{ version_split[0] }}"
    indexima_release: "{{ version_split[0:2] |join('.') }}"
  when:
    - indexima_year is not defined
    - version_format_new|bool

- name: Set indexima_month
  set_fact:
    indexima_month: "{{ version_split[1] }}"
  when:
    - indexima_month is not defined
    - version_format_new|bool

- name: Set indexima_build new
  set_fact:
    indexima_build: "{{ version_split[2] }}"
  when:
    - indexima_build is not defined
    - version_format_new|bool

- name: Set indexima_sp new
  set_fact:
    indexima_sp: "{{ version_split[3] }}"
  when:
    - indexima_sp is not defined
    - version_split[3] is defined
    - version_format_new|bool

- name: Set indexima_release
  set_fact:
    indexima_release: "{{ version_split[0:3] |join('.') }}"
  when:
    - indexima_release is not defined
    - not version_format_new|bool

- name: Set indexima_build
  set_fact:
    indexima_build: "{{ version_split[3] }}"
  when:
    - indexima_build is not defined
    - not version_format_new|bool

- name: Set indexima_sp
  set_fact:
    indexima_sp: "{{ version_split[4] }}"
  when:
    - indexima_sp is not defined
    - version_split is defined
    - version_split[4] is defined
    - not version_format_new|bool

- name: Set the JDBC URL for the cluster
  set_fact:
    jdbc_base_url: "jdbc:hive2://{% if zookeeper_quorum is defined %}{{ zookeeper_quorum }}\
    {% else %}{{ ansible_host }}\
    :{{ hive_port }}/default{% endif %}"
  ignore_errors: yes
  when: is_master == 1

- name: Set the Zookeeper namespace for the jdbc url
  set_fact:
    jdbc_zookeeper: "serviceDiscoveryMode=zooKeeper;zooKeeperNamespace={{ zookeeper_namespace }}"
  when:
    - ha == 1
    - is_master == 1
    - zookeeper_namespace is defined
  ignore_errors: yes

- name: Set the Kerberos principal for the jdbc url
  set_fact:
    jdbc_kerberos: "principal={{ kerberos_principal }}"
  when:
    - kerberos_indexima == 1
    - is_master == 1
  ignore_errors: yes

- name: Set the full JDBC URL
  set_fact:
    jdbc_url: "{{ ';'.join((jdbc_base_url, jdbc_zookeeper|d(), jdbc_kerberos|d())) }}"
  ignore_errors: yes
  when: is_master == 1

- name: Print the JDBC URL
  debug:
    msg: "{{ jdbc_url }}"
  ignore_errors: yes
  when: is_master == 1